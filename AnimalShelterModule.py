from pymongo import MongoClientfrom bson.objectid import ObjectIdclass AnimalShelter():    """ CRUD operations for Animal collection in MongoDB """    def __init__(self, username, password):        # Initializing the MongoClient. This helps to         # access the MongoDB databases and collections.               self.client = MongoClient('mongodb://%s:%s@localhost:33259' % (username, password))        self.database = self.client['AAC']        self.coll = self.database['animals']# Create method    def create(self, data=None):        try:            # data should be dictionary            self.coll.insert(data)              return "True"        except Exception:            # data creation failed            return "False"        # Read method     def read(self, query=None, projection=None):        try:            if query is not None and projection is not None:                # return with projection                 result = self.coll.find(query, projection)                return result              elif query is None and projection is None:                # return all documents and fields in collection                result = self.coll.find()                return result                     else:                # return without projection                result = self.coll.find(query)                 return result        except Exception as e:            # query failure            return "MongoDB Error: " + str(e)# Update method    def update(self, query=None, values=None):        try:            # update document(s) and return result in JSON format            result = self.coll.update_many(query, values)            return result        except Exception as e:            # update failure            return "MongoDB Error: " + str(e)# Delete method    def delete(self, query=None):        try:            # remove document(s) and return results in JSON format            result = self.coll.delete_many(query)            return result        except Exception as e:            # delete failure            return "MongoDB Error: " + str(e)            